# -*- coding: utf-8 -*-

#***************************************************************************
#*                                                                         *
#*   Copyright (c) 2012                                                    *
#*   Yorik van Havre <yorik@uncreated.net>                                 *
#*                                                                         *
#*   This program is free software; you can redistribute it and/or modify  *
#*   it under the terms of the GNU Lesser General Public License (LGPL)    *
#*   as published by the Free Software Foundation; either version 2 of     *
#*   the License, or (at your option) any later version.                   *
#*   for detail see the LICENCE text file.                                 *
#*                                                                         *
#*   This program is distributed in the hope that it will be useful,       *
#*   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
#*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
#*   GNU Library General Public License for more details.                  *
#*                                                                         *
#*   You should have received a copy of the GNU Library General Public     *
#*   License along with this program; if not, write to the Free Software   *
#*   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  *
#*   USA                                                                   *
#*                                                                         *
#***************************************************************************

#
# FreeCAD documentation build configuration file, created by
# sphinx-quickstart on Wed Nov 30 10:49:09 2011.
#
# This file is execfile()d with the current directory set to its containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys, os
import time

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#sys.path.insert(0, os.path.abspath('.'))

# --- Path Setup ---
print("-" * 30)
print("Configuring paths for FreeCAD API documentation...")

# Determine FreeCAD's main directory (where 'src' and 'build' reside)
# Assumes conf.py is in FREECAD_MAIN_DIR/src/Doc/sphinx/
sphinx_conf_dir = os.path.dirname(__file__)
FREECAD_MAIN_DIR = os.path.abspath(os.path.join(sphinx_conf_dir, "..", "..", ".."))
print(f"  Guessed FREECAD_MAIN_DIR: {FREECAD_MAIN_DIR}")

if not os.path.isdir(FREECAD_MAIN_DIR):
    print(f"  FATAL: Could not determine FreeCAD main directory based on conf.py location.")
    print(f"         Expected conf.py in <FREECAD_ROOT>/src/Doc/sphinx/")
    sys.exit(1)

FREECAD_BUILD_DIR = os.path.join(FREECAD_MAIN_DIR, "build")
freecad_lib_path = os.path.join(FREECAD_BUILD_DIR, "lib")
freecad_mod_top_path = os.path.join(FREECAD_BUILD_DIR, "Mod")

# Add build/lib to sys.path
if os.path.isdir(freecad_lib_path):
    if freecad_lib_path not in sys.path: # Check to avoid duplicates if already on PYTHONPATH
        print(f"  Adding to sys.path: {freecad_lib_path}")
        sys.path.insert(0, freecad_lib_path)
else:
    print(f"  WARNING: FreeCAD build lib directory not found: {freecad_lib_path}")
    print(f"           Ensure FreeCAD is built in: {FREECAD_BUILD_DIR}")

# Add top-level Mod directory (build/Mod).
if os.path.isdir(freecad_mod_top_path):
    if freecad_mod_top_path not in sys.path: # Check to avoid duplicates
        print(f"  Adding top-level Mod to sys.path: {freecad_mod_top_path}")
        sys.path.insert(0, freecad_mod_top_path)
else:
    print(f"  WARNING: FreeCAD build Mod directory not found: {freecad_mod_top_path}")

# Explicitly add the 'Draft' workbench module directory to sys.path
# to help Sphinx find DraftSnap.py, DraftTrackers.py directly
# when `.. automodule:: DraftSnap` is used, as Draft.py doesn't expose them as attributes.
draft_mod_path = os.path.join(FREECAD_BUILD_DIR, "Mod", "Draft")
if os.path.isdir(draft_mod_path):
    if draft_mod_path not in sys.path:
        print(f"  Adding specific Mod/Draft to sys.path: {draft_mod_path}")
        sys.path.insert(0, draft_mod_path)
else:
    print(f"  NOTE: Mod/Draft directory not found, direct import of Draft submodules might fail: {draft_mod_path}")

techdraw_mod_path = os.path.join(FREECAD_BUILD_DIR, "Mod", "TechDraw")
if os.path.isdir(techdraw_mod_path):
    if techdraw_mod_path not in sys.path:
        print(f"  Adding specific Mod/TechDraw to sys.path: {techdraw_mod_path}")
        sys.path.insert(0, techdraw_mod_path)
else:
    print(f"  NOTE: Mod/TechDraw directory not found: {techdraw_mod_path}")

partdesign_mod_path = os.path.join(FREECAD_BUILD_DIR, "Mod", "PartDesign")
if os.path.isdir(partdesign_mod_path):
    if partdesign_mod_path not in sys.path:
        print(f"  Adding specific Mod/PartDesign to sys.path: {partdesign_mod_path}")
        sys.path.insert(0, partdesign_mod_path)
else:
    print(f"  NOTE: Mod/PartDesign directory not found: {partdesign_mod_path}")

print("  Attempting to import FreeCAD...")
try:
    import FreeCAD
    print(f"  Successfully imported FreeCAD {FreeCAD.Version()}.")
    # The following lines are problematic for headless builds and initial minimal testing.
    # import FreeCADGui
    # FreeCADGui.showMainWindow() # this is needed for complete import of GUI modules
    # doc = FreeCAD.newDocument("doc")
except ImportError as e:
    print(f"  ERROR: Could not import FreeCAD: {e}")
    print(f"  Current sys.path:")
    for p in sys.path:
        print(f"    {p}")
    print(f"  Please ensure FreeCAD is built and {freecad_lib_path} is correct and accessible.")
except Exception as e_general:
    print(f"  ERROR during FreeCAD import or version check: {e_general}")

print("-" * 30)

# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.napoleon',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.inheritance_diagram',
    'sphinx_autodoc_typehints',
]

autodoc_mock_imports = [
    "MeshGui",
    "FreeCADGui",
    "pivy",
]

autodoc_default_options = {
    'members': True,
    'undoc-members': True,
    'show-inheritance': True,
    'inherited-members': False,
    'ignore-module-all': True,
}

# --- Intersphinx Settings ---
intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
    'PySide2': ('https://doc.qt.io/archives/qtforpython-5', None)
}

intersphinx_timeout = 5 # seconds
intersphinx_cache_limit = 5 # days

# --- Napoleon Settings ---
napoleon_google_docstring = True
napoleon_numpy_docstring = True
napoleon_include_init_with_doc = True
napoleon_include_private_with_doc = False # Set to True if you want to doc _members
napoleon_include_special_with_doc = True
napoleon_use_admonition_for_examples = True
napoleon_use_admonition_for_notes = True
napoleon_use_admonition_for_references = True
napoleon_use_ivar = True
napoleon_use_param = True
napoleon_use_rtype = True
# napoleon_preprocess_ représentes = True # If you have custom representer functions
# napoleon_attr_annotations = True # If using Python 3 type hints for attributes

# --- Todo Settings ---
todo_include_todos = True

suppress_warnings = ['docutils']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'FreeCAD'
current_year = str(time.localtime().tm_year)
copyright = f'{current_year}, The FreeCAD Team. Original work 2013, Jürgen Riegel, Werner Mayer, Yorik van Havre'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '1.1.0'
# The full version, including alpha/beta/rc tags.
release = '1.1.0-dev'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build',
                    'ViewProvider.rst',
                    'FreeCADGui.rst',
                    'PartDesign.rst',
                    ]

# The reST default role (used for this markup: `text`) to use for all documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []


# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#html_theme = 'alabaster'

#html_style = 'freecad.css'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = "FreeCAD API documentation"

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = "favicon.ico"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static']

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'FreeCADdoc'

# -- Options for HTML output ---------------------------------------------------
html_theme = 'sphinx_rtd_theme' # Changed from 'default'
# html_style = 'freecad.css' # Commented out as per your previous step
# html_favicon = "favicon.ico" # Commented out as per your previous step
html_static_path = ['_static']
html_title = "FreeCAD API documentation"
html_show_sourcelink = True # Default is True, good for users
html_show_sphinx = True     # Default is True
html_show_copyright = True  # Default is True

if html_theme == 'sphinx_rtd_theme':
    html_theme_options = {
        'logo_only': False,
        'prev_next_buttons_location': 'bottom',
        'style_external_links': False,
        # 'style_nav_header_background': '#2980B9', # Example color
        'collapse_navigation': True,
        'sticky_navigation': True,
        'navigation_depth': 4,
        'includehidden': True,
        'titles_only': False
    }


# -- Options for LaTeX output --------------------------------------------------

# The paper size ('letter' or 'a4').
#latex_paper_size = 'letter'

# The font size ('10pt', '11pt' or '12pt').
#latex_font_size = '10pt'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass [howto/manual]).
latex_documents = [
  ('index', 'FreeCAD.tex', u'FreeCAD Documentation',
   u'Jürgen Riegel, Werner Mayer,Yorik van Havre', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Additional stuff for the LaTeX preamble.
#latex_preamble = ''

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output --------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'freecad', u'FreeCAD Documentation',
     [u'Jürgen Riegel, Werner Mayer, Yorik van Havre'], 1)
]